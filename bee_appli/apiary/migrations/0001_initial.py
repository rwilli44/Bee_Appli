# Generated by Django 5.0.1 on 2024-01-05 10:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Quantity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(help_text='Quantity of the honey or syrup')),
                ('units', models.CharField(choices=[('Kilograms', 'Kilograms'), ('Milliliters', 'Milliliters')], help_text='The unit of measure for the honey or syrup')),
            ],
            options={
                'verbose_name': 'Quantity',
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('treatment_type', models.CharField(help_text='Name of the treatment applied to the hive', max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Treatment',
            },
        ),
        migrations.CreateModel(
            name='Beekeeper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text="Beekeeper's First Name", max_length=100)),
                ('last_name', models.CharField(help_text="Beekeeper's Last Name", max_length=100)),
                ('email', models.EmailField(help_text="Beekeeper's email address", max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='beekeeper', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BeeYard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beekeeper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beeyards', to='apiary.beekeeper')),
            ],
        ),
        migrations.CreateModel(
            name='Hive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('destroyed', 'Destroyed')], help_text='Status of the beehive')),
                ('date_updated', models.DateField(auto_now=True, help_text='Date the status was updated')),
                ('queen_year', models.IntegerField()),
                ('beeyard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hives', to='apiary.beeyard')),
            ],
        ),
        migrations.CreateModel(
            name='Contamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Parasite', 'Parasite'), ('Illness', 'Illness')], help_text='The type of contamination affecting the hive')),
                ('date', models.DateField(auto_now=True, help_text='Date the contamination was found')),
                ('hive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contaminations', to='apiary.hive')),
            ],
        ),
        migrations.CreateModel(
            name='ArtificialSwarming',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin_hives', models.ManyToManyField(help_text='The parent Hives from which swarms were taken', to='apiary.hive')),
            ],
            options={
                'verbose_name': 'Artificial Swarming',
            },
        ),
        migrations.CreateModel(
            name='Intervention',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intervention_type', models.CharField(choices=[('Harvest', 'Harvest'), ('Syrup Distribution', 'Syrup Distribution'), ('Artificial Swarming', 'Artificial Swarming'), ('Treatment', 'Treatment'), ('Destruction Queen Cells', 'Destruction Queen Cells'), ('Health Check', 'Health Check'), ('Super Installation', 'Super Installation')], help_text='The type of intervention from the given list')),
                ('date', models.DateTimeField(auto_now_add=True, help_text='The date of the intervention')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, limit_choices_to=models.Q(models.Q(('app_label', 'apiary'), ('model', 'quantity')), models.Q(('app_label', 'apiary'), ('model', 'artificialswarming')), models.Q(('app_label', 'apiary'), ('model', 'treatment')), _connector='OR'), null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('hive_affected', models.ForeignKey(help_text='The Hive concerned by the intervention', on_delete=django.db.models.deletion.CASCADE, to='apiary.hive')),
            ],
        ),
    ]
